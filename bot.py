import os
import json
from datetime import datetime
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏
USERS_FILE = "users.json"
MEETINGS_FILE = "meetings.json"

# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
for f in [USERS_FILE, MEETINGS_FILE]:
    if not os.path.exists(f):
        with open(f, "w") as file:
            json.dump([], file)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    with open(USERS_FILE, "r") as f:
        users = json.load(f)

    user_data = {
        "id": user.id,
        "username": user.username or f"user_{user.id}",
        "name": user.first_name
    }

    # –ù–µ –¥—É–±–ª–∏—Ä—É–µ–º
    if not any(u["id"] == user.id for u in users):
        users.append(user_data)
        with open(USERS_FILE, "w") as f:
            json.dump(users, f, indent=2)

    await update.message.reply_text(
        "‚úÖ –¢—ã –≤ Random Coffee! –ö–æ–≥–¥–∞ –ø—Ä–∏–¥–µ—Ç –≤—Ä–µ–º—è ‚Äî –ø–æ–ª—É—á–∏—à—å —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
        "–ü–æ—Å–ª–µ –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞–ø–∏—à–∏ /confirm_meeting"
    )

async def confirm(update: Update, context: ContextTypes.DEFAULT_TYPE):
    with open(MEETINGS_FILE, "r") as f:
        meetings = json.load(f)

    # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∞–∫—Ç–∏–≤–Ω—É—é –≤—Å—Ç—Ä–µ—á—É —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    for m in reversed(meetings):
        if m["status"] == "scheduled" and update.effective_user.id in [m["user1_id"], m["user2_id"]]:
            m["status"] = "confirmed"
            m["confirmed_at"] = datetime.utcnow().isoformat()
            with open(MEETINGS_FILE, "w") as f:
                json.dump(meetings, f, indent=2)
            await update.message.reply_text("üéâ –°–ø–∞—Å–∏–±–æ! –í—Å—Ç—Ä–µ—á–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.")
            return

    await update.message.reply_text("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤—Å—Ç—Ä–µ—á–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")

def main():
    token = os.getenv("TELEGRAM_BOT_TOKEN")
    if not token:
        raise ValueError("–ù—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å TELEGRAM_BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

    app = Application.builder().token(token).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("confirm_meeting", confirm))
    app.run_polling()

if __name__ == "__main__":
    main()